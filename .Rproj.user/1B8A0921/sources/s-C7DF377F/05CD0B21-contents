# In class activity for Data Science in EES 2020
# Starter script written by Isla Myers-Smith and Gergana Daskalova
# 21st October 2020

# Instructions ----

# Each group will tackle one question. To answer your question you need to use a pipe and dplyr functions. You can also use other functions. Here is a list of the dplyr functions:

# https://dplyr.tidyverse.org/reference/

# Before you start coding, you need to draw a work flow diagram on paper or a white board for how you are going to design your code. Then you need to take a photo of that diagram and upload it to the folder for this activity.

# Then you need to translate your workflow diagram into comments in the R code.  

# Then you can start coding.

# Remember that you are working on this script collaboratively so commit, pull and push frequently!


# Starter code ----

# Libraries
library(tidyverse)
library(scales)
library(viridis)

# Load Living Planet Data
LPI_data <- read.csv("data/LPI_data.csv")

# Reshape data into long form
LPI_long <- gather(data = LPI_data, key = "year", value = "pop", 25:69) %>%  # convert to long format
  filter(is.finite(pop)) %>%  
  group_by(id) %>%
  filter(length(unique(year)) > 5) %>%  # taking only pop that monitored for 5 years
  mutate(scalepop = rescale(pop, to = c(-1, 1))) %>%
  drop_na(scalepop) %>%
  ungroup()

str(LPI_long)

# Calculate slopes of population change
LPI.models <- LPI_long %>%
  group_by(biome, Class, id) %>%            
  do(mod = lm(scalepop ~ year, data = .)) %>%  # Create a linear model for each group (and extract the slope)
  mutate(.,                                    # (Slope is measure of population trend - pop over time)
         slope = summary(mod)$coeff[2]) %>% 
  ungroup() %>%
  mutate(id = id,
         biome = biome,
         Class = Class)

# You can ignore the warnings, it's just because some populations don't have enough data

# Group activity ----
# Rank all of the biomes from most to least well represented 
# with number of populations monitored

### Challenge part 1: Adapt that code to make that first figure more beautiful and save!

LPI_Bar <- LPI.models %>%  # counts number of unique populations per biome
  group_by(biome) %>% 
  summarise(count = length(unique(id))) %>%
  arrange(desc(count))  # this doesn't work so we had to reorder below

(LPI_Bargraph <- ggplot(data=LPI_Bar, aes(x = reorder(biome, desc(count)), y=count, color=count, fill=count)) + 
    geom_bar(stat="identity")+
    coord_flip()+   # flip the graph 
    theme_bw()+
    scale_fill_viridis(option = "magma", direction = -1) +
    scale_colour_viridis(option = "magma", direction = -1)+
    labs( y= "\nNumber of populations", x="Biome\n")  # other way around because we flipped our axis
  ) 


ggsave(LPI_Bargraph, filename = "bargraph-group-1.pdf", width = 8, height = 5)

### Challenge part 2: Answer the second question with your own data wrangling and a beautiful graph and save!

# How are populations changing across the six best monitored biomes?

# HINT: You can use facet_wrap() or facet_grid() from the ggplot2 package
# to quickly create a graph with multiple panels
